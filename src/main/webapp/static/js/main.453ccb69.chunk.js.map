{"version":3,"sources":["apiFacade.js","components/ResultList/DescriptionBox.js","components/ResultList/ResultRow.js","components/ResultList/ResultTable.js","components/Loader.js","components/ResultList/ResultList.js","components/ResultList2/DescriptionBox.js","components/ResultList2/ResultRow.js","components/ResultList2/ResultTable.js","components/ResultList2/ResultList2.js","components/User.js","components/Home.js","components/Opskrift.js","components/newPlan.js","components/ShoppingList.js","components/Login.js","global/suggestion-words.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["URL","facade","login","_callee","user","pass","options","res","json","regenerator_default","a","wrap","_context","prev","next","_this","makeOptions","username","password","fetch","sent","ok","status","fullError","setToken","token","sessionStorage","setItem","JSON","stringify","Username","Role","role","abrupt","stop","register","_callee2","type","_context2","userRole","getFoodPlans","_callee3","_context3","getMyFoodPlans","_callee4","l","u","opts","opt","_context4","getItem","parse","getRecipe","_callee5","id","_context5","getAllRecipe","_callee6","_context6","newPlan","_callee7","arr","week","_context7","dayPlans","newPlan2","_callee8","_context8","getShopingList","_callee9","_context9","text","localStorage","getToken","loggedIn","logout","removeItem","clear","method","addToken","body","headers","Content-type","Accept","this","list","then","response","unshift","DescriptionBox","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","description","ingredients","_this$props$obj","obj","plans","AddToMine","url","_ref","asyncToGenerator","mark","wkd","i","weekday","recipe","length","console","log","push","t0","apply","arguments","react_default","createElement","className","width","map","index","key","prep_time","react_router_dom","to","exact","onClick","React","Component","ResultRow","_useState","useState","_useState2","slicedToArray","isExpanded","setExpanded","owner","productId","location","lastupdate","Fragment","concat","colSpan","ResultList_DescriptionBox","ResultTable","reslist","ResultRow_ResultRow","Loader","class","ResultList","_React$Component","loading","inherits","createClass","value","_this2","setState","e","preventDefault","newItem","title","origin","price","imgurl","_this3","TryGet","_this4","msgs","components_Loader","ResultTable_ResultTable","ResultList2_DescriptionBox","ResultList2_ResultRow_ResultRow","ResultList2","ResultList2_ResultTable_ResultTable","User","useParams","Home","Opskrift","setLoading","_useState3","_useState4","opskrift","setopskrift","_x","getit","preparaion_steps","NewPlan","Description","setUser","_useState5","_useState6","_useState7","_useState8","chosen","setChosen","_useState9","_useState10","show","setShow","_useState11","_useState12","weekdays","_useState13","_useState14","_useState15","_useState16","plan","_useState17","_useState18","pland","_useState19","_useState20","getAllRec","all","newCHOSEN","_ref2","onChange","_ref3","evt","persist","prevState","objectSpread","defineProperty","target","registerNew","_ref4","onSubmit","splice","placeholder","selected","ShoppingList","setList","split","getbyid","LoginForm","formtype","RegisterForm","repeatPwd","alert","UserInfo","Login","setUsername","setRole","setLoggedIn","loginFormShown","showLoginForm","formtypechange","Flogout","_ref5","_x2","_ref6","_x3","_x4","_x5","Login_UserInfo","index_esm","Modal","size","centered","onHide","Header","closeButton","Title","Body","Login_LoginForm","Login_RegisterForm","words","Navigation","search","searchedWord","trim","newSuggestions","filter","word","startsWith","suggestions","clickOutside","searchSuggestionsRef","current","contains","pressedEscape","keyCode","clickSuggestionItem","item","createRef","document","addEventListener","removeEventListener","exampleAdd","ref","input","suggestion","components_Login","App","components_Navigation","react_router","path","ResultList2_ResultList2","components_User","components_ShoppingList","components_Opskrift","ResultList_ResultList","components_Home","Boolean","window","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.453ccb69.chunk.js","sourcesContent":["/* eslint-disable no-throw-literal */\r\nconst URL = \"https://matheradical.dk/Examen/\";\r\n//const URL = \"http://localhost:8080/ca3\";\r\nfunction handleHttpErrors(res) {\r\n    if (!res.ok) {\r\n        return Promise.reject({ status: res.status, fullError: res.json() })\r\n    }\r\n    return res.json();\r\n}\r\n\r\nclass ApiFacade {\r\n    //Insert utility-methods from a latter step (d) here\r\n    makeOptions(method, addToken, body) {\r\n        var opts = {\r\n            method: method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                'Accept': 'application/json',\r\n            }\r\n        }\r\n        if (addToken && this.loggedIn()) {\r\n            opts.headers[\"x-access-token\"] = this.getToken();\r\n        }\r\n        if (body) {\r\n            opts.body = JSON.stringify(body);\r\n        }\r\n        return opts;\r\n    }\r\n\r\n    login = async (user, pass) => {\r\n        const options = this.makeOptions(\"POST\", false, { username: user, password: pass });\r\n       // return fetch(URL + \"/api/login\", options)\r\n       //     .then(handleHttpErrors) \r\n       //     .then(res => this.setToken(res.token))\r\n       //     .then(res => res)\r\n       const res = await fetch(URL+\"api/login\", options)\r\n       const json = await res.json();\r\n       if(!res.ok){\r\n           throw {status: res.status, fullError: json}\r\n       }\r\n       this.setToken(res.token)\r\n       sessionStorage.setItem(\"user\",JSON.stringify({Username:json.username,Role:json.role}));\r\n       return json;\r\n    }\r\n    \r\n    register = async (user,pass,type) => {\r\n        const options = this.makeOptions(\"POST\", false, { username: user, password: pass,userRole:type });\r\n        const res = await fetch(URL+\"api/register\", options)\r\n        const json = await res.json();\r\n        if(!res.ok){\r\n            throw {status: res.status, fullError: json}\r\n        }\r\n        this.setToken(res.token)\r\n        return json;\r\n    }\r\n\r\n    getFoodPlans = async () => {\r\n        const res = await fetch(URL+\"api/MealPlanner\");\r\n        const json = await res.json();\r\n        if(!res.ok){\r\n            throw {status: res.status, fullError: json}\r\n        }\r\n        return json;\r\n    }\r\n\r\n    getMyFoodPlans = async () => {\r\n        let l =sessionStorage.getItem(\"user\")\r\n        let u = JSON.parse(l)\r\n        var opts = { user : u.Username};\r\n        var opt = this.makeOptions(\"POST\",true,opts)\r\n        const res = await fetch(URL+\"api/MealPlanner/My\",opt);\r\n        const json = await res.json();\r\n        if(!res.ok){\r\n            throw {status: res.status, fullError: json}\r\n        }\r\n        return json;\r\n    }\r\n\r\n    getRecipe = async (id) =>{\r\n        const res = await fetch(URL+\"api/recepies/\"+id);\r\n        const json = await res.json();\r\n        if(!res.ok){\r\n            throw {status: res.status, fullError: json}\r\n        }\r\n        return json;\r\n    }\r\n    getAllRecipe = async (id) =>{\r\n        const res = await fetch(URL+\"api/recepies\");\r\n        const json = await res.json();\r\n        if(!res.ok){\r\n            throw {status: res.status, fullError: json}\r\n        }\r\n        return json;\r\n    }\r\n\r\n    newPlan = async (arr,week) =>{\r\n        let l =sessionStorage.getItem(\"user\")\r\n        let u = JSON.parse(l)\r\n        var opts = { week: week,user:u.Username ,dayPlans:arr };\r\n        var opt = this.makeOptions(\"POST\",true,opts);\r\n        fetch(URL+\"api/MealPlanner/New\",opt)\r\n    }\r\n    newPlan2 = async (arr,week) =>{\r\n        let l =sessionStorage.getItem(\"user\")\r\n        if(l ==null){return 0};\r\n        let u = JSON.parse(l)\r\n        var opts = { week: week,user:u.Username ,dayPlans:arr };\r\n        var opt = this.makeOptions(\"POST\",true,opts);\r\n        fetch(URL+\"api/MealPlanner/New\",opt)\r\n    }\r\n\r\n    getShopingList = async(id) =>{\r\n        const res = await fetch(URL+\"api/MealPlanner/\"+id);\r\n        const json = await res.text();\r\n        \r\n        if(!res.ok){\r\n            throw {status: res.status, fullError: json}\r\n        }\r\n        return json;\r\n    }\r\n\r\n    CheckIfUser(list){\r\n        return fetch(URL+\"api/Example/user\")\r\n                .then(function(response) {\r\n                        return response.json();\r\n                }).then(res=>{list.unshift(res)})\r\n    }\r\n    CheckIfAdmin(list){\r\n        return fetch(URL+\"api/Example/admin\")\r\n                .then(function(response) {\r\n                        return response.json();\r\n                }).then(res=>{list.unshift(res)})\r\n    }\r\n\r\n    TryGet (){\r\n        return fetch(URL + \"api/products/all\").then(res=> res.json())\r\n\r\n    }\r\n\r\n    setToken = (token) => {\r\n        localStorage.setItem('jwtToken', token)\r\n    }\r\n    getToken = () => {\r\n        return localStorage.getItem('jwtToken')\r\n    }\r\n    loggedIn = () => {\r\n        const loggedIn = this.getToken() != null;\r\n        return loggedIn;\r\n    }\r\n    logout = () => {\r\n        localStorage.removeItem(\"jwtToken\");\r\n        sessionStorage.clear();\r\n    }\r\n\r\n}\r\nconst facade = new ApiFacade();\r\n\r\nexport default facade;\r\n","import React from 'react';\r\nimport './styles.scss';\r\nimport {NavLink } from 'react-router-dom';\r\nimport { ResultRow2 } from './ResultRow2';\r\nimport facade from '../../apiFacade';\r\n/*\r\nDev notes on DBA\r\npå DBA kan der findes den box der hedder vip-aditional text som indeholder product beskrivelsen\r\nvip-qna er info om varens stand.\r\nvip-matrix indeholder metadata om produktet. TAGS ex.\r\nvip-picure-galery har en masse billeder\r\n*/\r\n\r\n/*\r\nBox with descrptive text and an image.\r\nNeeds to be initialised with: \r\n-src\r\nthe images src.\r\n-title\r\nwhatever title is needed for the component to make sence.\r\n-description\r\ndescription for the picture or component.\r\n*/\r\n\r\nclass DescriptionBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: '',\r\n      ingredients: '',\r\n    };\r\n  }\r\n\r\n  \r\n  render() {\r\n    const {\r\n      obj: { week, plans, description, url },\r\n    } = this.props;\r\n\r\n    const AddToMine = async () =>{\r\n      \r\n      var wkd = [\"Mandag\", \"Tirsdag\", \"Onsdag\", \"Torsdag\", \"Fredag\", \"Lørdag\", \"Søndag\"]\r\n      var arr = [];\r\n      var arr =[{weekday:wkd[0] ,recipe:plans[0].recipe.id}]\r\n      for(let i = 0; 1 < plans.length; i++){\r\n        try{\r\n        console.log(i);\r\n          arr.push({weekday:wkd[i], recipe: plans[i].recipe.id})         \r\n        }\r\n        catch(error){\r\n          break;\r\n        }\r\n       }\r\n       facade.newPlan2(arr,week);\r\n    }\r\n  \r\n    return (\r\n      <div className=\"DescriptionBox\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th width=\"10%\">Ugedag</th>\r\n              <th width=\"15%\">Opskrift</th>\r\n              <th width=\"15%\">Prep time</th>\r\n              <th width=\"40%\">Beskrivelse</th>\r\n              <th width=\"10%\">link</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {plans.map((res, index) => (\r\n              (\r\n                <tr\r\n                  key={index}\r\n                  className=\"ResultRow__normalRow\"\r\n                >\r\n                  <td className=\"price\">{res.id}</td>\r\n                  <td className=\"price\">{res.recipe.id}</td>\r\n                  <td className=\"title\">{res.recipe.prep_time}</td>\r\n                  <td className=\"title\">{res.recipe.description}</td>\r\n\r\n                  <td><NavLink className=\"link\" to={\"/recepie/\"+res.recipe.id} exact>\r\n                    <span>mere info</span>\r\n                  </NavLink></td>\r\n                </tr>)\r\n            )\r\n            )\r\n            }\r\n          </tbody>\r\n        </table>\r\n        \r\n        <div className=\"container-middle\">\r\n          <p className=\"title\"></p>\r\n          <hr className=\"custom-hr\" />\r\n          <p className=\"description\">{this.state.description}</p>\r\n        </div>\r\n\r\n        <div className=\"container-right\"></div>\r\n        <button onClick={AddToMine}>\r\n          Tilføj Til mine planer\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default DescriptionBox;\r\n","import React, { useState } from 'react';\r\nimport DescriptionBox from './DescriptionBox';\r\n\r\nexport const ResultRow = ({ obj, index }) => {\r\n  const [isExpanded, setExpanded] = useState(false);\r\n\r\n  const { week, owner, plans, location, lastupdate, productId } = obj;\r\n\r\n  return (\r\n    <>\r\n      <tr\r\n        key={productId}\r\n        onClick={() => setExpanded(isExpanded => !isExpanded)}\r\n        className=\"ResultRow__normalRow\"\r\n      >\r\n        <td className=\"title\">{week}</td>\r\n        <td className=\"price\">{owner}</td>\r\n        <td className=\"origin\">{plans.length}</td>\r\n\r\n      </tr>\r\n      {/* {isExpanded && ( */}\r\n      <tr className={`ResultRow__expandedRow${isExpanded ? '' : 'hide'}`}>\r\n        <td colSpan=\"6\">\r\n          <DescriptionBox obj={obj} />\r\n        </td>\r\n      </tr>\r\n      {/* )} */}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { ResultRow } from './ResultRow';\r\nimport './styles.scss';\r\n\r\n/*\r\nA component that creates a table with 3 rows, the table is initialised with the header names, and a list of data to be displayed.\r\nTo use with different data, change the TH to fit the data and create adjust the ResultRow component acordingly.\r\n*/\r\n\r\nexport const ResultTable = ({ reslist }) => (\r\n  <table className=\"ResultTable\">\r\n    <thead>\r\n      <tr>\r\n        <th width=\"30%\">Plan for uge</th>\r\n        <th width=\"11%\">Lavet af</th>\r\n        <th width=\"12%\">Dage dækket </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {reslist.map((res, index) => {\r\n        return <ResultRow key={`ResultRow-${index}`} index={index} obj={res} />;\r\n      })}\r\n    </tbody>\r\n  </table>\r\n);\r\n","import React from 'react';\r\n\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div class=\"loader\"></div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport facade from '../../apiFacade';\r\nimport { ResultTable } from './ResultTable';\r\nimport Loader from '../../components/Loader';\r\n\r\nexport class ResultList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      reslist: [],loading:true\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { reslist } = this.state;\r\n    const { loading } = this.state;\r\n    facade.getFoodPlans().then(res => this.setState({ reslist: res })).then(this.setState({loading : false}));\r\n\r\n  }\r\n\r\n  getDescription() {}\r\n\r\n  exampleAdd(e) {\r\n    e.preventDefault();\r\n    const { reslist } = this.state;\r\n    const { key } = this.state;\r\n    var list = this.state.reslist;\r\n    const newItem = this.newItem.value;\r\n\r\n    list.unshift({\r\n      key: this.state.key,\r\n      title: newItem,\r\n      origin: 'button',\r\n      lastupdate: 'ligeNU!',\r\n      price: 9999,\r\n      imgurl: 'https://i.ebayimg.com/images/g/WSgAAOSwJeVd4OJd/s-l200.jpg',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur sed ullamcorper nulla. Pellentesque quis sapien justo. Etiam pellentesque ornare eros, ullamcorper mattis libero facilisis eget. Aenean et ante ut sapien.',\r\n    });\r\n\r\n    this.setState({ reslist: list, key: key + 1 });\r\n  }\r\n\r\n  getAll(e) {\r\n    e.preventDefault();\r\n    const { reslist } = this.state;\r\n    var list = this.state.reslist;\r\n    facade.TryGet().then(res => this.setState({ reslist: res }));\r\n  }\r\n\r\n  somefunction(e) {\r\n    e.preventDefault();\r\n    const { msgs } = this.state;\r\n    var list = this.state.msgs;\r\n    const newItem = this.newItem.value;\r\n    facade.TryGet(newItem, list).then(res => this.setState({ msgs: list }));\r\n  }\r\n\r\n  render() {\r\n    const { msgs } = this.state;\r\n    if (this.state.loading){\r\n      return <Loader />\r\n    }\r\n    else{\r\n    return (\r\n      <div className=\"ResultList\">\r\n        {/* <form\r\n          onSubmit={e => {\r\n            this.exampleAdd(e);\r\n          }}\r\n        >\r\n          <label> SearchBar</label>\r\n          <input\r\n            ref={input => (this.newItem = input)}\r\n            placeholder=\"SEARCH\"\r\n            id=\"addButton\"\r\n          />\r\n          <button type=\"submit\"> Search </button>\r\n        </form>\r\n        <button\r\n          onClick={e => {\r\n            this.getAll(e);\r\n          }}\r\n        >\r\n          Hent Producter fra vores API\r\n        </button> */}\r\n\r\n        <div className=\"ResultTableContainer\">\r\n          <ResultTable reslist={this.state.reslist} />\r\n        </div>\r\n      </div>\r\n    );}\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './styles.scss';\r\nimport {NavLink } from 'react-router-dom';\r\nimport { ResultRow2 } from './ResultRow2';\r\n/*\r\nDev notes on DBA\r\npå DBA kan der findes den box der hedder vip-aditional text som indeholder product beskrivelsen\r\nvip-qna er info om varens stand.\r\nvip-matrix indeholder metadata om produktet. TAGS ex.\r\nvip-picure-galery har en masse billeder\r\n*/\r\n\r\n/*\r\nBox with descrptive text and an image.\r\nNeeds to be initialised with: \r\n-src\r\nthe images src.\r\n-title\r\nwhatever title is needed for the component to make sence.\r\n-description\r\ndescription for the picture or component.\r\n*/\r\n\r\nclass DescriptionBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      description: '',\r\n      ingredients: '',\r\n    };\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const {\r\n      obj: { id, plans, description, url },\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"DescriptionBox\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th width=\"10%\">Ugedag</th>\r\n              <th width=\"15%\">Opskrift</th>\r\n              <th width=\"15%\">Prep time</th>\r\n              <th width=\"40%\">Beskrivelse</th>\r\n              <th width=\"10%\">link</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {plans.map((res, index) => (\r\n              (\r\n                <tr\r\n                  key={index}\r\n                  className=\"ResultRow__normalRow\"\r\n                >\r\n                  <td className=\"price\">{res.id}</td>\r\n                  <td className=\"price\">{res.recipe.id}</td>\r\n                  <td className=\"title\">{res.recipe.prep_time}</td>\r\n                  <td className=\"title\">{res.recipe.description}</td>\r\n\r\n                  <td><NavLink className=\"link\" to={\"/recepie/\"+res.recipe.id} exact>\r\n                    <span>mere info</span>\r\n                  </NavLink></td>\r\n                </tr>)\r\n            )\r\n            )\r\n            }\r\n          </tbody>\r\n        </table>\r\n        <NavLink className=\"link\" to={\"/shoppinglist/\"+id} exact>\r\n                    <span>Indkøbsliste for planen</span>\r\n                  </NavLink>\r\n        <div className=\"container-middle\">\r\n          <p className=\"title\"></p>\r\n          <hr className=\"custom-hr\" />\r\n          <p className=\"description\">{this.state.description}</p>\r\n        </div>\r\n\r\n        <div className=\"container-right\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default DescriptionBox;\r\n","import React, { useState } from 'react';\r\nimport DescriptionBox from './DescriptionBox';\r\n\r\nexport const ResultRow = ({ obj, index }) => {\r\n  const [isExpanded, setExpanded] = useState(false);\r\n\r\n  const { week, owner, plans, location, lastupdate, productId } = obj;\r\n\r\n  return (\r\n    <>\r\n      <tr\r\n        key={productId}\r\n        onClick={() => setExpanded(isExpanded => !isExpanded)}\r\n        className=\"ResultRow__normalRow\"\r\n      >\r\n        <td className=\"title\">{week}</td>\r\n        <td className=\"price\">{owner}</td>\r\n        <td className=\"origin\">{plans.length}</td>\r\n\r\n      </tr>\r\n      {/* {isExpanded && ( */}\r\n      <tr className={`ResultRow__expandedRow${isExpanded ? '' : 'hide'}`}>\r\n        <td colSpan=\"6\">\r\n          <DescriptionBox obj={obj} />\r\n        </td>\r\n      </tr>\r\n      {/* )} */}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport { ResultRow } from './ResultRow';\r\nimport './styles.scss';\r\n\r\n/*\r\nA component that creates a table with 3 rows, the table is initialised with the header names, and a list of data to be displayed.\r\nTo use with different data, change the TH to fit the data and create adjust the ResultRow component acordingly.\r\n*/\r\n\r\nexport const ResultTable = ({ reslist }) => (\r\n  <table className=\"ResultTable\">\r\n    <thead>\r\n      <tr>\r\n        <th width=\"30%\">Plan for uge</th>\r\n        <th width=\"11%\">Lavet af</th>\r\n        <th width=\"12%\">Dage dækket </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {reslist.map((res, index) => {\r\n        return <ResultRow key={`ResultRow-${index}`} index={index} obj={res} />;\r\n      })}\r\n    </tbody>\r\n  </table>\r\n);\r\n","import React from 'react';\r\nimport facade from '../../apiFacade';\r\nimport { ResultTable } from './ResultTable';\r\nimport Loader from '../Loader';\r\n\r\nexport class ResultList2 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      reslist: [],loading:true\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { reslist } = this.state;\r\n    const { loading } = this.state;\r\n    facade.getMyFoodPlans().then(res => this.setState({ reslist: res })).then(this.setState({loading : false}));\r\n    \r\n  }\r\n\r\n  getDescription() {}\r\n\r\n  exampleAdd(e) {\r\n    e.preventDefault();\r\n    const { reslist } = this.state;\r\n    const { key } = this.state;\r\n    var list = this.state.reslist;\r\n    const newItem = this.newItem.value;\r\n\r\n    list.unshift({\r\n      key: this.state.key,\r\n      title: newItem,\r\n      origin: 'button',\r\n      lastupdate: 'ligeNU!',\r\n      price: 9999,\r\n      imgurl: 'https://i.ebayimg.com/images/g/WSgAAOSwJeVd4OJd/s-l200.jpg',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur sed ullamcorper nulla. Pellentesque quis sapien justo. Etiam pellentesque ornare eros, ullamcorper mattis libero facilisis eget. Aenean et ante ut sapien.',\r\n    });\r\n\r\n    this.setState({ reslist: list, key: key + 1 });\r\n  }\r\n\r\n  getAll(e) {\r\n    e.preventDefault();\r\n    const { reslist } = this.state;\r\n    var list = this.state.reslist;\r\n    facade.TryGet().then(res => this.setState({ reslist: res }));\r\n  }\r\n\r\n  somefunction(e) {\r\n    e.preventDefault();\r\n    const { msgs } = this.state;\r\n    var list = this.state.msgs;\r\n    const newItem = this.newItem.value;\r\n    facade.TryGet(newItem, list).then(res => this.setState({ msgs: list }));\r\n  }\r\n\r\n  render() {\r\n    const { msgs } = this.state;\r\n    if (this.state.loading){\r\n      return <Loader />\r\n    }\r\n    else{\r\n    return (\r\n      <div className=\"ResultList\">\r\n        {/* <form\r\n          onSubmit={e => {\r\n            this.exampleAdd(e);\r\n          }}\r\n        >\r\n          <label> SearchBar</label>\r\n          <input\r\n            ref={input => (this.newItem = input)}\r\n            placeholder=\"SEARCH\"\r\n            id=\"addButton\"\r\n          />\r\n          <button type=\"submit\"> Search </button>\r\n        </form>\r\n        <button\r\n          onClick={e => {\r\n            this.getAll(e);\r\n          }}\r\n        >\r\n          Hent Producter fra vores API\r\n        </button> */}\r\n\r\n        <div className=\"ResultTableContainer\">\r\n          <ResultTable reslist={this.state.reslist} />\r\n        </div>\r\n      </div>\r\n    );}\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    useParams\r\n  } from \"react-router-dom\";\r\nconst User = () => {\r\n    let { id } = useParams()\r\n    return(\r\n        <div><h3>{id}</h3></div>\r\n    )\r\n\r\n}\r\n\r\nexport default User;","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n        <h1>Velkommen til Matheradical's middags planlægger.</h1>\r\n        <h2>En Verden af opskrifter</h2>\r\n        <p>ER du træt af at skulle tænke over opskrifter og indkøbs lister heletiden?\r\n            Det er vi, derfor kan du anvende vores fantastiske side til at finde spændene opskrifte.\r\n        </p>\r\n        <h2>Planlæg din uge!</h2>\r\n        <p>Planlæg hele din uge, allerede idag. Der er ingen grund til at købe ind flere gange, med vores smarte system samles hele ugens indkøbs sedel et sted.</p>\r\n        <h2>Få hjælp af andre og del dine bedste planer</h2>\r\n        <p>Er madhjernen på ferie kan vi hjælpe. Eller, de kan de andre brugere, gå på opdagelse i andres madplaner og brug dem du bedst kan li. Eller tilpas dem så de passer dig.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport facade from '../apiFacade';\r\nimport Loader from './Loader'\r\nconst Opskrift = () => {\r\n    let { id } = useParams()\r\n    const [loading, setLoading] = useState(true);\r\n    const [opskrift, setopskrift] = useState();\r\n    const getit = async (id) => {\r\n        const res = await facade.getRecipe(id);\r\n        setopskrift(res);\r\n        setLoading(false)\r\n    }\r\n    getit(id);\r\n\r\n    return (\r\n        <div>\r\n        {loading?(\r\n            <Loader />\r\n            ) : (\r\n                \r\n                <div>\r\n        <h1>\r\n            {opskrift.id}\r\n        </h1>\r\n        <h2>\r\n            {opskrift.prep_time}\r\n        </h2>\r\n        <h3>\r\n        {opskrift.description}\r\n        </h3>\r\n        <ul>\r\n            {opskrift.preparaion_steps.map(res => (\r\n                <li>{res}</li>\r\n            ))}\r\n        </ul>\r\n        <ul>\r\n            {opskrift.ingredients.map(res => (\r\n                <li>{res}</li>\r\n            ))}\r\n        </ul></div>\r\n        )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Opskrift;","import React, { useState } from 'react';\r\nimport facade from '../apiFacade';\r\nimport Loader from './Loader'\r\nimport { NavLink } from 'react-router-dom';\r\nconst NewPlan = () => {\r\n    const [user, setUser] = useState({\r\n        week: '',\r\n        recipe: 'Slow cooker spicy chicken and bean soup',\r\n        weekday: 'Mandag',\r\n        Description: '',\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n    const [opskrift, setopskrift] = useState();\r\n    const [chosen, setChosen] = useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n    const [weekdays, setweekdays] = useState([\"Mandag\", \"Tirsdag\", \"Onsdag\", \"Torsdag\", \"Fredag\", \"Lørdag\", \"Søndag\"]);\r\n    const [uwd, setuwd] = useState([\"Mandag\", \"Tirsdag\", \"Onsdag\", \"Torsdag\", \"Fredag\", \"Lørdag\", \"Søndag\"]);\r\n    const [plan, setPlan] = useState([]);\r\n    const [pland, setPland] = useState([]);\r\n    const [week, setWeek] = useState(\"\")\r\n    const onSubmit = evt => {\r\n        if (weekdays.length >= 1) {\r\n            evt.preventDefault();\r\n            plan.push(user.recipe);\r\n            pland.push(user.weekday)\r\n            for (var i = 0; i < weekdays.length; i++) {\r\n                if (weekdays[i] == user.weekday) {\r\n                    weekdays.splice(i, 1);\r\n                }\r\n            }\r\n            user.weekday = weekdays[0];\r\n        }\r\n    };\r\n\r\n    const getAllRec = async () => {\r\n        const all = await facade.getAllRecipe()\r\n        setopskrift(all);\r\n        setLoading(false);\r\n    }\r\n    const newCHOSEN = async () => {\r\n        setShow(false)\r\n        const res = await facade.getRecipe(user.recipe)\r\n        if (user.recipe != \"\") {\r\n            await setChosen(res);\r\n        }\r\n        if (chosen != null) {\r\n            setShow(true)\r\n        }\r\n\r\n    }\r\n\r\n    getAllRec();\r\n    const onChange = async evt => {\r\n        evt.persist();\r\n        setUser(prevState => ({\r\n            ...prevState,\r\n            [evt.target.id]: evt.target.value,\r\n        }));\r\n        newCHOSEN();\r\n    };\r\n\r\n    const registerNew = async () =>{\r\n        var arr =[{weekday:pland[0],recipe:plan[0]}]\r\n        for(let i = 1; i < pland.length; i++){\r\n            arr.push({weekday:pland[i],recipe:plan[i]})         \r\n         }\r\n        facade.newPlan(arr,user.week);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (<Loader />) : (\r\n                <div>\r\n                    <h1>Lav en ny Madplan</h1>\r\n                    <button className=\"register\" onClick={registerNew}>\r\n                        Opret Madlplan\r\n                    </button>\r\n                    <form onSubmit={onSubmit} onChange={onChange}>\r\n                        <input placeholder=\"Uge nummer\" id=\"week\" />\r\n                        <input placeholder=\"Beskrivelse\" id=\"Description\" />\r\n                        <select id=\"weekday\">\r\n                            {weekdays.map(res => (\r\n                                <option>{res}</option>\r\n                            ))}\r\n                        </select>\r\n                        <select id=\"recipe\">\r\n                            {opskrift.map(res => (\r\n                                <option>{res}</option>\r\n                            ))}\r\n                        </select>\r\n                        <button type=\"submit\" className=\"register\">\r\n                            Tilføj Madplan\r\n                        </button>\r\n                    </form>\r\n                    {plan.map((res, index) => (\r\n                        <div>\r\n                            <h3>{pland[index]}</h3>\r\n                            <form >\r\n                                <select id=\"recipe\">\r\n                                    {opskrift.map(res => (\r\n                                        (plan[index] == res) ? (<option selected>{res}</option>) : (<option>{res}</option>)\r\n                                    ))}\r\n                                </select>\r\n                            </form>\r\n                        </div>\r\n                    ))}\r\n                    {show ? (\r\n                        <div>\r\n                            <h1>\r\n                                {chosen.id}\r\n                            </h1>\r\n                            <h2>\r\n                                {chosen.prep_time}\r\n                            </h2>\r\n                            <h3>\r\n                                {chosen.description}\r\n                            </h3>\r\n                            <NavLink className=\"link\" to={\"/recepie/\" + chosen.id} exact>\r\n                                <span>mere info</span>\r\n                            </NavLink>\r\n                        </div>) : (\r\n                            <div></div>)}\r\n\r\n                </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPlan; ","import React, { useState } from 'react';\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport facade from '../apiFacade';\r\nimport Loader from './Loader'\r\nconst ShoppingList = () => {\r\n    let { id } = useParams()\r\n    const [list, setList] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const getbyid = async (id) => {\r\n        const res = await facade.getShopingList(id);\r\n        setList(res.split(\",\"));\r\n        setLoading(false);\r\n    }\r\n    getbyid(id);\r\n    return (\r\n        <div>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n                    <div>\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th width=\"30%\">InkøbsList</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {list.map((res, index) => (\r\n                                    <tr\r\n                                        key={index}\r\n                                        className=\"ResultRow__normalRow\"\r\n                                    >\r\n                                        <td className=\"title\">{res}</td>\r\n                                    </tr>\r\n                                ))}\r\n\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ShoppingList;","import React, { useState } from 'react';\r\nimport { FiUser } from 'react-icons/fi';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Loader from './Loader';\r\nimport './styles.scss';\r\nimport facade from '../apiFacade';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst LoginForm = ({ login }) => {\r\n  const [user, setUser] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n\r\n  const [form, setform] = useState({\r\n    formtype: \"Login\"\r\n  });\r\n\r\n  const onSubmit = evt => {\r\n    evt.preventDefault();\r\n    login(user.username, user.password);\r\n  };\r\n\r\n  const onChange = evt => {\r\n    evt.persist();\r\n    setUser(prevState => ({\r\n      ...prevState,\r\n      [evt.target.id]: evt.target.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"LoginForm\">\r\n      <form onSubmit={onSubmit} onChange={onChange}>\r\n        <input placeholder=\"Brugernavn\" id=\"username\" />\r\n        <input placeholder=\"Kodeord\" type=\"password\" id=\"password\" />\r\n        <button type=\"submit\" className=\"login\">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RegisterForm = ({ register }) => {\r\n  const [user, setUser] = useState({\r\n    username: '',\r\n    password: '',\r\n    repeatPwd: '',\r\n    type: 'User'\r\n  });\r\n\r\n  const onSubmit = evt => {\r\n    evt.preventDefault();\r\n    if (user.password == user.repeatPwd) {\r\n      register(user.username, user.password, user.type);\r\n    } else {\r\n      alert(\"Passwords matchede ikke.\");\r\n    }\r\n  };\r\n\r\n  const onChange = evt => {\r\n    evt.persist();\r\n    setUser(prevState => ({\r\n      ...prevState,\r\n      [evt.target.id]: evt.target.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"LoginForm\">\r\n      <form onSubmit={onSubmit} onChange={onChange}>\r\n        <input placeholder=\"Brugernavn\" id=\"username\" />\r\n        <input placeholder=\"Kodeord\" type=\"password\" id=\"password\" />\r\n        <input placeholder=\"Gentag kodeord\" type=\"password\" id=\"repeatPwd\" />\r\n        <select id=\"type\">\r\n          <option value=\"User\">User</option>\r\n          <option value=\"Admin\">Admin</option>\r\n        </select>\r\n        <button type=\"submit\" className=\"login\">\r\n          Opret bruger\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserInfo = ({ username, role, logout }) => {\r\n  const onLogout = evt => {\r\n    evt.preventDefault();\r\n    logout();\r\n  };\r\n\r\n  return (\r\n    <div className=\"UserInfo\">\r\n      <ul>\r\n        <li>\r\n          <NavLink className=\"link\" to=\"/user/newplan\">\r\n            <span>Ny Madplan</span>\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink className=\"link\" to=\"/user/foodplans\">\r\n            <span>Mine Madplaner</span>\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink className=\"link\" to={\"/user/\" + { username }}>\r\n            <span>Profil {username}</span>\r\n          </NavLink>\r\n\r\n        </li>\r\n        <li>\r\n          <button onClick={onLogout} className=\"login\">\r\n            <span>Logud</span>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Login = props => {\r\n  const [username, setUsername] = useState(false);\r\n  const [role, setRole] = useState('');\r\n  const [loggedIn, setLoggedIn] = useState('');\r\n  const [loginFormShown, showLoginForm] = useState(false);\r\n  const [formtype, formtypechange] = useState('Login')\r\n  const [loading, setLoading] = useState(false)\r\n  const Flogout = async () => {\r\n    setLoggedIn(false);\r\n    console.log(loggedIn);\r\n    facade.logout();\r\n  };\r\n\r\n  const login = async (username, pass) => {\r\n    try {\r\n      setLoading(true);\r\n      let user = await facade.login(username, pass)\r\n      setLoading(false);\r\n      setLoggedIn(true);\r\n      setRole(user.role);\r\n      setUsername(user.username);\r\n      showLoginForm(false);\r\n    }\r\n    catch (error) {\r\n      alert(\"username eller password forkert\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (username, pass, type) => {\r\n    try {\r\n      setLoading(true);\r\n      let user = await facade.register(username, pass, type)\r\n      setLoading(false);\r\n      setLoggedIn(true);\r\n      setRole(user.role);\r\n      setUsername(user.username);\r\n      showLoginForm(false);\r\n    }\r\n    catch (error) {\r\n      alert(\"username allerede i brug.\");\r\n      setLoading(false);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"loginform\">\r\n      {loggedIn ? (\r\n        <UserInfo username={username} role={role} logout={Flogout} />\r\n      ) : (\r\n          <button\r\n            className=\"login\"\r\n            onClick={() => {\r\n              showLoginForm(true);\r\n              formtypechange('Login')\r\n            }}\r\n          >\r\n            <FiUser className=\"icon\" />\r\n            <span>Login</span>\r\n          </button>\r\n        )}\r\n\r\n      <Modal\r\n        show={loginFormShown}\r\n        size=\"md\"\r\n        centered\r\n        onHide={() => {\r\n          showLoginForm(false);\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            <FiUser className=\"modal-icon\" />\r\n            {formtype}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {loading ? (<div className=\"LoginForm\"><Loader /></div>) : (formtype == 'Login') ?\r\n            (<div><LoginForm login={login} />\r\n              <button\r\n                className=\"register\"\r\n                onClick={() => formtypechange('Opret Ny Bruger')}\r\n              >\r\n                <span>Ny Bruger</span>\r\n              </button>\r\n            </div>\r\n            ) : (\r\n              <RegisterForm register={register} />\r\n            )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","export const words = [\r\n  \"Slow cooker spicy chicken and bean soup\",\r\n  \"slow cooker beef stew\",\r\n  \"Smoked paprika goulash for the slow cooker\",\r\n  \"Pistachio chicken with pomegranate sauce\",\r\n  \"Cheesy leek and mustard soup\",\r\n  \"Christmas Stollen\",\r\n  \"Polly's eccles cakes\",\r\n  \"Braised beef in red wine\",\r\n  \"Moist garlic roasted chicken\",\r\n  \"Cheese and bacon stuffed pasta shells\",\r\n  \"Tofu vindaloo\"\r\n  ];\r\n","import React from 'react';\r\nimport { FiSearch } from 'react-icons/fi';\r\nimport { BrowserRouter as Router, NavLink ,useHistory } from 'react-router-dom';\r\nimport Login from './Login';\r\nimport { ResultList } from './ResultList/ResultList';\r\nimport { words } from '../global/suggestion-words';\r\nimport './styles.scss';\r\n\r\nclass Navigation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      suggestions: [],\r\n    };\r\n\r\n    this.searchSuggestionsRef = React.createRef();\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.pressedEscape, false);\r\n    document.addEventListener('mousedown', this.clickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.pressedEscape, false);\r\n    document.removeEventListener('mousedown', this.clickOutside);\r\n  }\r\n\r\n  exampleAdd(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  search = e => {\r\n    e.persist();\r\n\r\n    const searchedWord = e.target.value.trim();\r\n\r\n    if (searchedWord.trim().length == 0) {\r\n      this.setState({ suggestions: [] });\r\n      return;\r\n    }\r\n\r\n    const newSuggestions = words.filter(word => word.startsWith(searchedWord));\r\n    this.setState({ suggestions: newSuggestions });\r\n  };\r\n\r\n  clickOutside = e => {\r\n    if (\r\n      this.searchSuggestionsRef.current != null &&\r\n      !this.searchSuggestionsRef.current.contains(e.target)\r\n    ) {\r\n      this.setState({ suggestions: [] });\r\n    }\r\n  };\r\n\r\n  pressedEscape = e => {\r\n    if (e.keyCode === 27) {\r\n      this.setState({ suggestions: [] });\r\n    }\r\n  };\r\n  \r\n  clickSuggestionItem = item => {\r\n    //this.props.history.push(\"/recepie/\"+item);\r\n  };\r\n\r\n  render() {\r\n    const { suggestions } = this.state;\r\n    return (\r\n      <div>\r\n        \r\n          <div className=\"Header\">\r\n            <div className=\"container-buttons\">\r\n              <NavLink className=\"link\" to=\"/\" exact>\r\n                <span>HOME</span>\r\n              </NavLink>\r\n              <NavLink className=\"link\" to=\"/madplaner\">\r\n                <span>Madplaner</span>\r\n              </NavLink>\r\n            </div>\r\n            <div className=\"container-search\">\r\n              <form\r\n                className=\"form\"\r\n                onSubmit={e => {\r\n                  this.exampleAdd(e);\r\n                }}\r\n              >\r\n                <FiSearch className=\"search-icon\" />\r\n                <input\r\n                  ref={input => (this.newItem = input)}\r\n                  placeholder=\"Search here...\"\r\n                  id=\"addButton\"\r\n                  className=\"search\"\r\n                  onChange={this.search}\r\n                />\r\n                {suggestions.length > 0 && (\r\n                  <div\r\n                    className=\"search-suggestion\"\r\n                    ref={this.searchSuggestionsRef}\r\n                  >\r\n                    {suggestions.map(suggestion => (\r\n                      <div\r\n                        className=\"search-suggestion-item\"\r\n                        onClick={() => this.clickSuggestionItem(suggestion)}\r\n                      >\r\n                        {suggestion}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </form>\r\n            </div>\r\n            <div className=\"container-login\">\r\n              <Login />\r\n            </div>\r\n          </div>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from 'react';\r\nimport { ResultList } from './components/ResultList/ResultList';\r\nimport { ResultList2 } from './components/ResultList2/ResultList2';\r\nimport About from './components/About';\r\nimport Loader from './components/Loader';\r\nimport User from './components/User';\r\nimport Home from './components/Home';\r\nimport Opskrift from './components/Opskrift';\r\nimport NewPlan from './components/newPlan';\r\nimport ShoppingList from './components/ShoppingList';\r\nimport facade from './apiFacade';\r\nimport Navigation from './components/Navigation';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  // HashRouter,\r\n  Switch\r\n} from 'react-router-dom';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { loggedIn: false, username: '', role: '' };\r\n  }\r\n  logout = () => {\r\n    facade.logout();\r\n    this.setState({ loggedIn: false });\r\n  };\r\n\r\n  login = async (username, pass) => {\r\n    const res = await facade.login(username, pass);\r\n    this.setState({ loggedIn: true, username: username, role: res.role });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Navigation />\r\n          <Switch>\r\n            <Route path=\"/user/foodplans\">\r\n              <ResultList2 />\r\n            </Route>\r\n            <Route path=\"/user/newplan\">\r\n              <NewPlan />\r\n            </Route>\r\n            <Route path=\"/user/:id\">\r\n              <User />\r\n            </Route>\r\n            <Route path=\"/shoppinglist/:id\">\r\n              <ShoppingList />\r\n            </Route>            \r\n            <Route path=\"/recepie/:id\">\r\n              <Opskrift />\r\n            </Route>\r\n            <Route path=\"/madplaner\">\r\n              <ResultList />\r\n            </Route>\r\n            <Route path=\"/loader\" >\r\n              <Loader />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div >\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}